{
	// stl function snippets
	"vec_input" : {
		"scope": "cpp",
		"description": "take input into vector",
		"prefix": "vec_input",
		"body": [
			"for(int ${1:i}=0 ; ${1:i} < ${2:n} ; ${1:i}++)",
			"\tcin >> ${3:input}[${1:i}];",
			"$0"
		]
	},
	"sort" : {
		"scope": "cpp",
		"description": "sort elements inside container",
		"prefix": "sort",
		"body": [
			"sort(${1:input}.begin() , ${1:input}.end());",
			"$0"
		]
	},
	"fill" : {
		"scope": "cpp",
		"description": "fill elements of container",
		"prefix": "fill",
		"body": [
			"fill(${1:input}.begin(),${1:input}.end(),${2:value});",
			"$0"
		]
	},
	"sum" : {
		"scope": "cpp",
		"description": "find sum of elements in container",
		"prefix": "sum",
		"body": [
			"${1} ${2:result} = accumulate ( ${3:input}.begin() , ${3:input}.end() , ${4:start});",
			"$0",
		]
	},
	"print_container" : {
		"scope": "cpp", 
		"description": "print contents of container using cout",
		"prefix": "print",
		"body": [
			"void __print__ (const ${1:vector<llint>}& ${2:input}) { ",
			"\tfor ( const auto& i : ${2:input} )",
			"\t\tcout << i << \" \";",
			"\treturn;",
			"}",
			"$0"
		]
	},
	"codeforces_boilerplate": {
		"scope": "cpp",
		"description": "boilerplate code for codeforces submissions",
		"prefix": "codeforces",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <algorithm>",
			"#include <numeric>",
			"#include <limits>",
			"#include <utility>",
			"#include <map>",
			"#include <stack>",
			"#include <memory>",
			"#include <cmath>",
			"#include <set>",
			"#include <unordered_map>",
			"#include <tuple>",
			"",
			"// Problem: ",
			"",
			"typedef long long int llint;",
			"typedef long double ldouble;",
			"",
			"",
			"",
			"int main(){",
			"\tstd::ios_base::sync_with_stdio(false);",
			"\tstd::cin.tie(nullptr);",
			"\tllint t;",
			"\tstd::cin >> t;",
			"\tfor(llint i=0;i<t;i++){",
			"\t\t$0",
			"\t}",
			"\treturn 0;",
			"}",
			""
		]
	},

	"cpp": {
		"scope": "cpp",
		"description": "basic cpp program",
		"prefix": "cpp",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <algorithm>",
			"#include <numeric>",
			"#include <limits>",
			"#include <utility>",
			"#include <map>",
			"#include <stack>",
			"#include <memory>",
			"#include <cmath>",
			"#include <set>",
			"#include <unordered_map>",
			"#include <tuple>",
			"#include <optional>",
			"#include <bitset>",
			"",
			"#define in scanf",
			"#define out printf",
			"",
			"using namespace std;",
			"",
			"// Problem: ",
			"",
			"typedef long long int llint;",
			"typedef long double ldouble;",
			"",
			"",
			"",
			"int main(){",
			"\tstd::ios_base::sync_with_stdio(false);",
			"\tstd::cin.tie(nullptr);",
			"\t$0",
			"\treturn 0;",
			"}",
			""
		]
	},

	"leet": {
		"scope": "cpp",
		"description": "leetcode boilerplate",
		"prefix": "leet",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"using namespace std;",
			"",
			"",
			"",
			""		
		]
	}
}